[gd_scene load_steps=11 format=3 uid="uid://d4c7y88cmhkve"]

[ext_resource type="PackedScene" uid="uid://bsvnvrccidyw2" path="res://backgrounds/3d_background.tscn" id="2"]
[ext_resource type="PackedScene" uid="uid://duuai1k3do5bw" path="res://levels/template.tscn" id="4"]
[ext_resource type="PackedScene" uid="uid://blssy5erb4gi1" path="res://entities/enemy/enemy_test.tscn" id="5"]
[ext_resource type="PackedScene" uid="uid://dm121ccygtfu8" path="res://entities/hazard_zone.tscn" id="6"]
[ext_resource type="PackedScene" uid="uid://bp6s3ennh11ys" path="res://entities/room.tscn" id="7"]

[sub_resource type="Shader" id="Shader_b2h43"]
code = "/*
    Retro Shader
    
    This shader implements the following effects:
    - Pixelization (with a specified pixel size)
    - Noise
    - Color palette (depends on the green channel of a pixel)
    
    This version samples SCREEN_TEXTURE which will process the entire screen.
*/

shader_type canvas_item;
render_mode skip_vertex_transform;

// texture params

uniform bool screen = true;

// pixelation params

uniform float pixel_size = 4.0;
uniform bool antialiased = false;

// palette params

uniform sampler2D palette_a;
uniform sampler2D palette_b;

uniform float palette_layer = 0;
uniform float palette_blend = 0.0;

// noise params

uniform float noise_strength = 0.015;

// \"random\" number generator
float rand(vec2 co) {
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}
vec2 get_pixel_ratio(float pixsize, sampler2D tex) {
    // pixel size / texture size
    return pixsize / vec2(textureSize(tex, 0));
}

vec2 get_pixel_ratio2(float pixsize, sampler2D tex) {
    // pixel size / texture size
    return pixsize / vec2(textureSize(tex, 0));
}

void vertex() {
    vec4 world_vertex = MODEL_MATRIX * vec4(VERTEX, 0.0, 1.0);
    world_vertex = floor(world_vertex / pixel_size) * pixel_size;
    VERTEX = world_vertex.xy;
}

void fragment() {
    vec2 uv;
    if (screen) { uv = SCREEN_UV; } else { uv = UV; }

    // pixelize screen
    // =========================================================================
      
    vec2 pixel_uv;
      
    if (antialiased) {
        
        vec2 screen_ratio;
        if (screen) { screen_ratio = get_pixel_ratio(pixel_size, SCREEN_TEXTURE); }
        else { screen_ratio = get_pixel_ratio2(pixel_size, TEXTURE); }
        
        pixel_uv = (floor(uv / screen_ratio) * screen_ratio) + (screen_ratio / 2.0);
        //pixel_uv = (floor(uv / screen_ratio) * screen_ratio);
        
        if (screen) { COLOR = textureLod(SCREEN_TEXTURE, pixel_uv, 0.0); }
        else { COLOR = textureLod(TEXTURE, pixel_uv, 0.0); }
        
    } else {
        
        pixel_uv = floor((FRAGCOORD.xy) / pixel_size) * pixel_size;
        
        if (screen) { COLOR = texelFetch(SCREEN_TEXTURE, ivec2(pixel_uv), 0); }
        else { COLOR = texelFetch(TEXTURE, ivec2(pixel_uv), 0); }
    }
    
    // noise
    // =========================================================================
    
    //COLOR = mix(COLOR, vec4(vec3(rand(pixel_uv + rand(vec2(TIME)))), 1.0), 0.03);
    float n = abs(rand(pixel_uv + rand(vec2(floor(TIME * 10.0)))));
    //n = clamp(n, 0.0, 1.0);
    COLOR = mix(COLOR, COLOR + vec4(vec3(n), 1.0), noise_strength);
    
    // color palette
    // =========================================================================
    
    float u = (floor(COLOR.g * 4.0) / 4.0) + (1.0 / 8.0);
    float v = palette_layer; // selects which row of the palette to use
    vec4 palette_color_a = texture(palette_a, vec2(u, v));
    vec4 palette_color_b = texture(palette_b, vec2(u, v));
    vec4 palette_color = mix(palette_color_a, palette_color_b, palette_blend);
    COLOR = vec4(palette_color.rgb, COLOR.a);  
}"

[sub_resource type="CompressedTexture2D" id="1"]

[sub_resource type="CompressedTexture2D" id="2"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yk8qx"]
shader = SubResource("Shader_b2h43")
shader_parameter/antialiased = false
shader_parameter/noise_strength = 0.015
shader_parameter/palette_a = SubResource("1")
shader_parameter/palette_b = SubResource("2")
shader_parameter/palette_blend = 0.0
shader_parameter/palette_layer = 0.25
shader_parameter/pixel_size = null
shader_parameter/screen = false

[sub_resource type="ViewportTexture" id="ViewportTexture_vanda"]
viewport_path = NodePath("viewport")

[node name="level" instance=ExtResource("4")]
level_name = "level 2"

[node name="map_16" parent="tilemaps" index="0"]
layer_0/tile_data = PackedInt32Array(0, 196608, 2, 65536, 131072, 2, 131072, 131072, 2, 196608, 131072, 2, 262144, 131072, 2, 524288, 131072, 2, 589824, 131072, 2, 458752, 131072, 2, 393216, 131072, 2, 327680, 131072, 2, 65535, 0, 2, -1, 0, 2, 131071, 0, 2, 196607, 0, 2, 262143, 0, 2, 327679, 0, 2, 393215, 0, 2, 458751, 0, 2, 524287, 0, 2, 589823, 0, 2, 655359, 0, 2, 720895, 0, 2, 786431, 0, 2, 851967, 0, 2, 917503, 0, 2, 983039, 0, 2, 1048575, 0, 2, 1114111, 0, 2, 1179647, 0, 2, 1114112, 65536, 2, 1048576, 65536, 2, 983040, 196608, 3, 917504, 131072, 2, 851968, 131072, 2, 786432, 131072, 2, 720896, 131072, 2, 655360, 131072, 2, 1245183, 0, 3, 1179648, 65536, 3, 1179649, 65536, 3, 1179650, 65536, 3, 1179651, 65536, 3, 1179652, 65536, 3, 1179653, 65536, 3, 1179654, 65536, 3, 1179655, 65536, 3, 1179656, 65536, 3, 1179657, 65536, 3, 1114114, 65536, 2, 1114113, 65536, 2, 1048577, 65536, 2, 983041, 65536, 1, 983042, 65536, 1, 983043, 65536, 1, 983044, 65536, 1, 983045, 65536, 1, 983046, 65536, 1, 983047, 65536, 1, 983048, 65536, 1, 983049, 65536, 1, 983050, 65536, 1, 983051, 65536, 1, 983052, 65536, 1, 983053, 65536, 1, 983054, 65536, 1, 983055, 65536, 1, 983056, 65536, 1, 1048592, 65536, 2, 1048593, 65536, 2, 1048594, 65536, 2, 1048595, 65536, 2, 1048596, 65536, 2, 983061, 65536, 1, 983062, 65536, 1, 983063, 65536, 1, 983064, 65536, 1, 983065, 65536, 1, 983066, 65536, 1, 983067, 65536, 1, 983068, 65536, 1, 983069, 65536, 1, 983070, 65536, 1, 1048599, 65536, 2, 1048598, 65536, 2, 1048597, 65536, 2, 1048591, 65536, 2, 1048590, 65536, 2, 1048589, 65536, 2, 1048588, 65536, 2, 1048587, 65536, 2, 1048586, 65536, 2, 1048585, 65536, 2, 1048584, 65536, 2, 1048583, 65536, 2, 1048582, 65536, 2, 1048581, 65536, 2, 1048580, 65536, 2, 1048579, 65536, 2, 1048578, 65536, 2, 983060, 65536, 1, 983059, 65536, 1, 983058, 65536, 1, 983057, 65536, 1, 1048604, 65536, 2, 1048605, 65536, 2, 1048603, 65536, 2, 1048602, 65536, 2, 1048601, 65536, 2, 1048600, 65536, 2, 1048606, 65536, 2, 1114140, 65536, 2, 1114141, 65536, 2, 1114142, 65536, 2, 1114139, 65536, 2, 1114138, 65536, 2, 1114137, 65536, 2, 1114136, 65536, 2, 1114135, 65536, 2, 1114134, 65536, 2, 1114133, 65536, 2, 1114132, 65536, 2, 1114131, 65536, 2, 1114130, 65536, 2, 1114129, 65536, 2, 1114128, 65536, 2, 1114127, 65536, 2, 1114126, 65536, 2, 1114125, 65536, 2, 1114124, 65536, 2, 1114123, 65536, 2, 1114122, 65536, 2, 1114121, 65536, 2, 1114120, 65536, 2, 1114119, 65536, 2, 1114118, 65536, 2, 1114115, 65536, 2, 1114116, 65536, 2, 1114117, 65536, 2, 1179658, 65536, 3, 1179659, 65536, 3, 1179660, 65536, 3, 1179661, 65536, 3, 1179669, 65536, 3, 1179668, 65536, 3, 1179667, 65536, 3, 1179666, 65536, 3, 1179665, 65536, 3, 1179664, 65536, 3, 1179663, 65536, 3, 1179662, 65536, 3, 1179670, 65536, 3, 1179671, 65536, 3, 1179672, 65536, 3, 1179673, 65536, 3, 1179674, 65536, 3, 1179675, 65536, 3, 1179676, 65536, 3, 1179677, 65536, 3, 1179678, 65536, 3, -65506, 131072, 2, 30, 131072, 3, 29, 65536, 3, -65507, 65536, 2, -131043, 65536, 1, -131042, 131072, 1, -131044, 65536, 1, -131045, 65536, 1, -131046, 65536, 1, -131047, 65536, 1, -131048, 65536, 1, -131049, 65536, 1, -131050, 65536, 1, -131051, 65536, 1, -131052, 65536, 1, -65516, 65536, 2, -65517, 65536, 2, -65518, 65536, 2, -65519, 65536, 2, -65520, 65536, 2, -65521, 65536, 2, -65522, 65536, 2, -65523, 65536, 2, -65524, 65536, 2, -65525, 65536, 2, -65526, 65536, 2, -65527, 65536, 2, -131064, 65536, 1, -131065, 65536, 1, -131066, 65536, 1, -131067, 65536, 1, -131068, 65536, 1, -131069, 65536, 1, -131070, 65536, 1, -65534, 65536, 2, -65535, 65536, 2, -65536, 65536, 2, -65537, 0, 1, -131072, 65536, 1, -131071, 65536, 1, -131063, 65536, 1, -131062, 65536, 1, -131061, 65536, 1, -131060, 65536, 1, -131059, 65536, 1, -131058, 65536, 1, -131057, 65536, 1, -131056, 65536, 1, -131055, 65536, 1, -131054, 65536, 1, -131053, 65536, 1, -65528, 65536, 2, -65529, 65536, 2, -65530, 65536, 2, -65531, 65536, 2, -65532, 65536, 2, -65533, 65536, 2, -65515, 65536, 2, -65514, 65536, 2, -65513, 65536, 2, -65512, 65536, 2, -65511, 65536, 2, -65510, 65536, 2, -65509, 65536, 2, -65508, 65536, 2, 1, 65536, 3, 2, 65536, 3, 3, 65536, 3, 4, 65536, 3, 5, 65536, 3, 6, 65536, 3, 7, 65536, 3, 8, 65536, 3, 9, 65536, 3, 10, 65536, 3, 11, 65536, 3, 12, 65536, 3, 13, 65536, 3, 14, 65536, 3, 15, 65536, 3, 16, 65536, 3, 17, 65536, 3, 18, 65536, 3, 19, 65536, 3, 20, 65536, 3, 21, 65536, 3, 22, 65536, 3, 23, 65536, 3, 24, 65536, 3, 25, 65536, 3, 26, 65536, 3, 27, 65536, 3, 28, 65536, 3, 983071, 65536, 1, 983072, 65536, 1, 983073, 65536, 1, 983074, 65536, 1, 983075, 65536, 1, 983076, 65536, 1, 983077, 65536, 1, 983078, 65536, 1, 983079, 65536, 1, 983080, 65536, 1, 983081, 65536, 1, 983082, 65536, 1, 983083, 65536, 1, 983084, 65536, 1, 983085, 65536, 1, 983086, 65536, 1, 983087, 65536, 1, 1048607, 65536, 2, 1048608, 65536, 2, 1048609, 65536, 2, 1048610, 65536, 2, 1048611, 65536, 2, 1048612, 65536, 2, 1048613, 65536, 2, 1048614, 65536, 2, 1048615, 65536, 2, 1048616, 65536, 2, 1048617, 65536, 2, 1048618, 65536, 2, 1048619, 65536, 2, 1048620, 65536, 2, 1048621, 65536, 2, 1048622, 65536, 2, 1048623, 65536, 2, 1048624, 65536, 2, 1048625, 65536, 2, 1114162, 65536, 2, 1114163, 65536, 2, 1114164, 65536, 2, 1114165, 65536, 2, 1114166, 65536, 2, 1114167, 65536, 2, 1114168, 65536, 2, 1114169, 65536, 2, 1114170, 65536, 2, 1114171, 131072, 2, 1048635, 131072, 2, 1048634, 65536, 2, 1048633, 65536, 2, 1048632, 65536, 2, 1048631, 65536, 2, 1048630, 65536, 2, 1048629, 65536, 2, 1048628, 65536, 2, 1048627, 65536, 2, 1048626, 65536, 2, 1114151, 65536, 2, 1114150, 65536, 2, 1114149, 65536, 2, 1114148, 65536, 2, 1114147, 65536, 2, 1114146, 65536, 2, 1179681, 65536, 3, 1179680, 65536, 3, 1179679, 65536, 3, 1114143, 65536, 2, 1114144, 65536, 2, 1114145, 65536, 2, 1114152, 65536, 2, 1114153, 65536, 2, 1114154, 65536, 2, 1114155, 65536, 2, 1114156, 65536, 2, 1114157, 65536, 2, 1114158, 65536, 2, 1114159, 65536, 2, 1114160, 65536, 2, 1114161, 65536, 2, 983099, 131072, 1, 983098, 65536, 1, 983097, 65536, 1, 983096, 65536, 1, 983095, 65536, 1, 983094, 65536, 1, 983093, 65536, 1, 983092, 65536, 1, 983091, 65536, 1, 983089, 65536, 1, 983090, 65536, 1, 983088, 65536, 1, 1179683, 65536, 3, 1179682, 65536, 3, 1179684, 65536, 3, 1179685, 65536, 3, 1179686, 65536, 3, 1179687, 65536, 3, 1179688, 65536, 3, 1179689, 65536, 3, 1179707, 131072, 3, 1179706, 65536, 3, 1179705, 65536, 3, 1179704, 65536, 3, 1179703, 65536, 3, 1179702, 65536, 3, 1179701, 65536, 3, 1179700, 65536, 3, 1179699, 65536, 3, 1179698, 65536, 3, 1179697, 65536, 3, 1179696, 65536, 3, 1179695, 65536, 3, 1179694, 65536, 3, 1179693, 65536, 3, 1179692, 65536, 3, 1179691, 65536, 3, 1179690, 65536, 3)

[node name="map_8" parent="tilemaps" index="1"]
layer_0/tile_data = PackedInt32Array()

[node name="start" parent="points" index="0"]
position = Vector2(960, 832)

[node name="hazard_zone" parent="rooms/room_1" index="1"]
position = Vector2(0, 1216)

[node name="respawn" parent="rooms/room_1/hazard_zone" index="1"]
position = Vector2(254, -748)

[node name="light_2d" parent="rooms/room_1" index="2"]
position = Vector2(640, -576)
shadow_filter = 1
shadow_filter_smooth = 9.4
texture_scale = 2.0

[node name="enemy" parent="rooms/room_1" index="3" instance=ExtResource("5")]
material = SubResource("ShaderMaterial_yk8qx")
position = Vector2(992, 256)
max_health = 2

[node name="enemy_2" parent="rooms/room_1" index="4" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(1120, 800)

[node name="enemy_3" parent="rooms/room_1" index="5" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(352, 800)

[node name="room" parent="rooms" index="1" instance=ExtResource("7")]
position = Vector2(1920, 0)

[node name="enemy" parent="rooms/room" index="1" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(928, 480)

[node name="enemy_2" parent="rooms/room" index="2" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(928, 992)

[node name="enemy_3" parent="rooms/room" index="3" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(416, 928)

[node name="enemy_4" parent="rooms/room" index="4" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(1440, 928)

[node name="enemy_5" parent="rooms/room" index="5" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(288, 1696)

[node name="enemy_6" parent="rooms/room" index="6" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(928, 1440)

[node name="enemy_7" parent="rooms/room" index="7" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(1568, 1696)

[node name="room_3" parent="rooms" index="2" instance=ExtResource("7")]
position = Vector2(3840, 0)

[node name="hazard_zone" parent="rooms/room_3" index="1" instance=ExtResource("6")]
position = Vector2(0, 2240)
size = Vector2(1920, 32)

[node name="respawn" type="Node2D" parent="rooms/room_3/hazard_zone" index="1"]
position = Vector2(128, -448)

[node name="enemy" parent="rooms/room_3" index="2" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(736, 1440)

[node name="enemy_2" parent="rooms/room_3" index="3" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(896, 1888)

[node name="enemy_3" parent="rooms/room_3" index="4" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(1664, 1280)

[node name="enemy_4" parent="rooms/room_3" index="5" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(896, 1088)

[node name="enemy_5" parent="rooms/room_3" index="6" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(288, 968)

[node name="enemy_6" parent="rooms/room_3" index="7" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(160, 704)

[node name="enemy_7" parent="rooms/room_3" index="8" instance=ExtResource("5")]
modulate = Color(1, 1, 0.5, 1)
position = Vector2(1672, 720)

[node name="enemy_8" parent="rooms/room_3" index="9" instance=ExtResource("5")]
modulate = Color(1, 0, 1, 1)
position = Vector2(896, 392)
max_health = 3

[node name="background" parent="." index="3" instance=ExtResource("2")]
z_index = -10
texture = SubResource("ViewportTexture_vanda")
metadata/_edit_lock_ = true

[editable path="tilemaps"]
